<repeat-for-each>
    <slot/>
    <script>
      import StdComp from 'Framework/app-core/StdComp'
      const sc =  Object.assign({
        preStdOnMounted(props, state) {
          console.log('repeat-for-each mounted')
          let subject
          if(this.com) {
            subject = this.com.evaluateBindExpression(props.subject, true)
            subject = subject.value
          }
          console.log('subject', subject)
          const slots = this.slots
          if(slots) {
            let i = 0;
            let item
            for(let c of slots) {
              item = subject[i]
              let cname = c.html.substring(1, indexOf(' '))
              let bindings = c.bindings
              let g = '<'+cname+' '
              for(let bc of bindings) {
                console.log(bc)
                for(let a of bc.attributes) {
                  const scope = {
                    b(arg1, ...more) {
                      console.log('b called with', arg1, ...more)
                      return eval(arg1)
                    }
                  }
                  g += `${a.name}="${a.evaluate(scope)}" />`
                }
              }
              console.log(g)
            }
          }
        }
      }, StdComp)
      export default sc
    </script>

</repeat-for-each>