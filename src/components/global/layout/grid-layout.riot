<grid-layout>
    <div style="display: grid;">
        <slot/>
    </div>
    <style>
    </style>
    <script>
      import {newCommon} from 'Framework/app-core/ComCommon'
      let cm;
      export default {
        state: {
        },
        onBeforeMount(props, state) {
          cm = newCommon(this)
        },
        onMounted(props, state) {
          let div = this.$('DIV')
          cm.setCommonProps(div, props)

          let xareas = props.gridTemplateAreas || props.gridtemplateareas || props.areas || ''
          xareas='"'+xareas.split('/').join('""')+'"'
          div.style.gridTemplateAreas = xareas

          let columns = props.gridTemplateColumns || props.gridtemplatecolumns || props.columns || ''
          while(columns.indexOf(',') !== -1) {
            columns = columns.replace(',', ' ').replace('  ', ' ')
          }
          let n
          while((n = columns.indexOf('*')) !== -1) {
            let hasNum = columns.charAt(n-1) >= '0' && columns.charAt(n-1) <= '9'
            columns = columns.replace('*', hasNum ? 'fr' : '1fr')
          }
          div.style.gridTemplateColumns = columns
          let rows = props.gridTemplateRows || props.gridtemplaterows || props.rows || ''
          while(rows.indexOf(',') !== -1) {
            rows = rows.replace(',', ' ').replace('  ', ' ')
          }
          while((n = rows.indexOf('*')) !== -1) {
            let hasNum = rows.charAt(n-1) >= '0' && rows.charAt(n-1) <= '9'
            rows = rows.replace('*', hasNum ? 'fr' : '1fr')
          }

          div.style.gridTemplateRows = rows

          div.style.gridGap = props.gridGap || props.gridgap || props.gap
          cm.parseFits(props)
        }
      }
    </script>
</grid-layout>